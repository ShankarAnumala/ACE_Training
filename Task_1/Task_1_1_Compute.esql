 CREATE COMPUTE MODULE Task_1_1_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE ref REFERENCE TO InputRoot.XMLNSC.Account_Opening;
		DECLARE ref1 REFERENCE to InputRoot.XMLNSC.Account_Opening.Customer_Details;
		DECLARE i INTEGER 1;
		DECLARE j INTEGER;
		set j = CARDINALITY(InputRoot.XMLNSC.Account_Opening.Customer_Details[]);
		while i<=j DO
			if LENGTH(InputRoot.XMLNSC.Account_Opening.Customer_Details[i].Personal_Details.Mobile_Number) =10 then
				if LENGTH(InputRoot.XMLNSC.Account_Opening.Customer_Details[i].POA.AADHAR_DETAILS)=12 then
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].Referenceid = InputRoot.XMLNSC.Account_Opening.Customer_Details[i].Personal_Details.refid;
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponceCode = '202 success';
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponseReason = 'xml is validated successfully';
				else 
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].Referenceid = InputRoot.XMLNSC.Account_Opening.Customer_Details[i].Personal_Details.refid;
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponceCode = '404 failure';
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponseReason = 'aadhar number is invalid';
				END IF;
			else 
				set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].Referenceid = InputRoot.XMLNSC.Account_Opening.Customer_Details[i].Personal_Details.refid;
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponceCode = '404 failure';
					set OutputRoot.XMLNSC.Account_Opening.Customer_Details[i].ResponseReason = 'mobile number is invalid';
			END IF;
		set i=i+1;
		END WHILE;
	END;
END MODULE;