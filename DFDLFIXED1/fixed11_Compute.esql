

CREATE COMPUTE MODULE fixed11_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		  CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot.XMLNSC.fixed.header.head_elem1 = InputRoot.DFDL.fixed.header.head_elem1;
        SET OutputRoot.XMLNSC.fixed.header.head_elem2 = InputRoot.DFDL.fixed.header.head_elem2;
        SET OutputRoot.XMLNSC.fixed.header.head_elem3 = InputRoot.DFDL.fixed.header.head_elem3;
        SET OutputRoot.XMLNSC.fixed.header.head_elem4 = InputRoot.DFDL.fixed.header.head_elem4;
        SET OutputRoot.XMLNSC.fixed.header.head_elem5 = InputRoot.DFDL.fixed.header.head_elem5;
        SET OutputRoot.XMLNSC.fixed.header.head_elem6 = InputRoot.DFDL.fixed.header.head_elem6;
        SET OutputRoot.XMLNSC.fixed.header.head_elem7 = InputRoot.DFDL.fixed.header.head_elem7;
        SET OutputRoot.XMLNSC.fixed.header.head_elem8 = InputRoot.DFDL.fixed.header.head_elem8;
       DECLARE I INTEGER 1;
       DECLARE ref REFERENCE TO InputRoot.DFDL.fixed.body;
       WHILE LASTMOVE(ref) DO
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem1 = ref.body_elem1;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem2 = ref.body_elem2;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem3 = ref.body_elem3;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem4 = ref.body_elem4;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem5 = ref.body_elem5;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem6 = ref.body_elem6;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem7 = ref.body_elem7;
       	SET OutputRoot.XMLNSC.fixed.body[I].body_elem8 = ref.body_elem8;
       	MOVE ref NEXTSIBLING;
       	SET I = I + 1;
       END WHILE;
	END;
END MODULE;
