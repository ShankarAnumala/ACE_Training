
CREATE COMPUTE MODULE log4j_handler_Compute
--	DECLARE CONFILE CHARACTER '';
--	DECLARE flag BOOLEAN;
--	DECLARE res BOOLEAN;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
--		CALL initLog4J(CONFILE) INTO flag;
--		IF flag IS TRUE THEN
			CALL CopyEntireMessage();
--		ELSE
--			SET OutputRoot.XMLNSC.Log.msg = 'Not Initialized';
--		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		 DECLARE CONTINUE HANDLER FOR SQLSTATE LIKE 'S22012'
		 BEGIN
		 SET OutputRoot.XMLNSC.root.name = 'Exception Handle in Handler';
---		 CALL writeToLogFile(MessageFlowLabel,'SOAP_Webservice_INFO','','The log4j is initialized.') INTO res;
		-- SET OutputRoot.XMLNSC.root.sucess = 'yes';
		 END;
		DECLARE C INTEGER;
		SET C =4;

--		CALL writeToLogFile(MessageFlowLabel,'SOAP_Webservice_INFO','','The log4j is initialized.') INTO res;
--		SET OutputRoot = InputRoot;
		-- THROW USER EXCEPTION VALUES( 1, 'S22012', 42, 'error text' );
		 SET OutputRoot.XMLNSC.root.sucess = 'yes';
	END;
END MODULE;

--CREATE FUNCTION initLog4J (IN CONFIG_FILE_NAME CHARACTER ) RETURNS BOOLEAN
--LANGUAGE JAVA
--EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";
--
--CREATE FUNCTION writeToLogFile(IN COMPONENT_NAME CHARACTER,
--IN LOGGERNAME CHARACTER,
--IN LEVEL CHARACTER,
--IN TEXT CHARACTER) RETURNS BOOLEAN
--LANGUAGE JAVA
--EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
----EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";